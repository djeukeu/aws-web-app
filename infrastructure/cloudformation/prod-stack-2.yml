---
Parameters:
  AppName:
    Type: String
    Description: The name associate with the project
  UserName:
    Type: String
    Description: The name of the IAM user for the access key

  ContainerPort:
    Type: Number
    Default: '80'
    Description: Open port for the container
  DesiredCapacity:
    Type: Number
    Default: '1'
    Description: Number of instances to launch in the ECS cluster.

Resources:
  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    DependsOn:
      - HttpTargetGroup
      - HTTPListener
    Properties:
      RequiresCompatibilities:
        - FARGATE
      Family: !Ref AppName
      ContainerDefinitions:
        - Name: !Ref AppName
          Image: !Join 
            - ':'
            - - !Join 
                - /
                - - !GetAtt ECRRepository.Arn
                  - !Ref ECRRepository
              - latest
          Essential: true
          PortMappings:
            - HostPort: !Ref ContainerPort
              Protocol: tcp
              ContainerPort: !Ref ContainerPort
      NetworkMode: awsvpc
      Memory: '512'
      Cpu: '256'
      ExecutionRoleArn: !Ref ECSTaskExecutionRole
  ECSTaskExecutionRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: !Sub ${AppName}-role
      AssumeRolePolicyDocument:
        Version: "2008-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ecs-tasks.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Policies:
        - PolicyName: !Sub ${AppName}-role-policy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: 
                  - "ecr:GetAuthorizationToken"
                  - "ecr:BatchCheckLayerAvailability"
                  - "ecr:GetDownloadUrlForLayer"
                  - "ecr:BatchGetImage"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource: !GetAtt ECRRepository.Arn
  ECSService:
    Type: 'AWS::ECS::Service'
    DependsOn: TaskDefinition
    Properties:
      ServiceName: !Ref AppName
      Cluster: !GetAtt ServerCluster.Arn
      LaunchType: FARGATE
      DesiredCount: !Ref DesiredCapacity
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 100
      HealthCheckGracePeriodSeconds: 5
      TaskDefinition: !Ref TaskDefinition
      NetworkConfiguration:
        AwsvpcConfiguration:
          SecurityGroups: 
            - !GetAtt ServerSecurityGroup.GroupId
          Subnets: 
            - !Ref PublicSubnetA
            - !Ref PublicSubnetB
            - !Ref PublicSubnetC
          AssignPublicIp: ENABLED
      LoadBalancers:
        - ContainerName: !Ref AppName
          ContainerPort: !Ref ContainerPort
          TargetGroupArn: !Ref HttpTargetGroup
          LoadBalancerName: !GetAtt ApplicationLoadBalancer.LoadBalancerName
  

Outputs:
  LoadBalancerDNS:
    Description: Load Balancer DNS name to access the server 
    Value: !GetAtt ApplicationLoadBalancer.DNSName
  UserAccessKeyId:
    Description: User access key ID
    Value: !Ref MyAccessKey
  UserAccessKeySecret:
    Description: User secret access key
    Value: !GetAtt MyAccessKey.SecretAccessKey
