name: Provision, Build and Deploy Web app
run-name: ${{ github.actor }} triggered the provisioning, building and deployment of the Web App

on:
  push:
    branches:
      - develop

jobs:
  stack_build_deploy:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Write stack parameter file
        run: echo '${{ secrets.STAGING_STACK_PARAMETER }}' > parameters.json
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Provision AWS Stack
        id: stack
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: ${{secrets.APP_NAME}}
          template: './infrastructure/cloudformation/staging-stack.yml'
          parameter-overrides: 'file:///${{ github.workspace }}/parameters.json'
          no-fail-on-empty-changeset: 1
      - name: Read node version
        id: nvmrc
        uses: browniebroke/read-nvmrc-action@v1
      - name: Setup Nodejs
        uses: actions/setup-node@v4
        with:
          node-version: '${{ steps.nvmrc.outputs.node_version }}'
      - name: Install project packages
        run: yarn
      - name: Build project
        run: yarn build
        env:
          NODE_OPTIONS: --openssl-legacy-provider
      - name: Deploy to EC2 instance
        uses: easingthemes/ssh-deploy@v5.1.0
        env:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
          REMOTE_HOST: ${{steps.stack.outputs.instancepublicdnsname}}
          REMOTE_USER: ${{ secrets.EC2_USERNAME }}
          SOURCE: "./"
          TARGET: ${{ secrets.EC2_TARGET_DIR }}
          EXCLUDE: "/node_modules/"
      - name: Launch App in the EC2 instance
        uses: appleboy/ssh-action@master
        with:
          host: ${{steps.stack.outputs.instancepublicdnsname}}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            sudo yum -y update
            sudo yum install -y httpd
            sudo systemctl start httpd
            sudo systemctl enable httpd
            cd /home/ec2-user/build
            sudo mv * /var/www/html
            sudo systemctl restart httpd
      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
